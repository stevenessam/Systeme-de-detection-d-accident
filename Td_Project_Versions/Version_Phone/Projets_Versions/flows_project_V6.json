[
    {
        "id": "668472c3b2ec5a1c",
        "type": "tab",
        "label": "NodeRed_Projet",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "712e37dfbacf3b11",
        "type": "function",
        "z": "668472c3b2ec5a1c",
        "name": "function gps",
        "func": "\nmsg.payload = {\n    latitude: Number(msg.req.params.latitude),\n    longitude: Number(msg.req.params.longitude),\n    speed: Number(msg.req.params.speed)\n \n\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 160,
        "wires": [
            [
                "5401146f3ffe7c60",
                "cbbec4bb4c49637a"
            ]
        ]
    },
    {
        "id": "5401146f3ffe7c60",
        "type": "debug",
        "z": "668472c3b2ec5a1c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 620,
        "wires": []
    },
    {
        "id": "c0916321a9679412",
        "type": "http in",
        "z": "668472c3b2ec5a1c",
        "name": "",
        "url": "/app/gps/:latitude/:longitude/:speed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "712e37dfbacf3b11"
            ]
        ]
    },
    {
        "id": "cbbec4bb4c49637a",
        "type": "influxdb out",
        "z": "668472c3b2ec5a1c",
        "influxdb": "15c01c224ffc15c8",
        "name": "",
        "measurement": "testgps2",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "StevenEssam",
        "bucket": "testBD",
        "x": 1080,
        "y": 160,
        "wires": []
    },
    {
        "id": "fde2a924d1c92d1f",
        "type": "http in",
        "z": "668472c3b2ec5a1c",
        "name": "",
        "url": "/app/light/:light",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "2f71c5cf3bed0a28"
            ]
        ]
    },
    {
        "id": "2f71c5cf3bed0a28",
        "type": "function",
        "z": "668472c3b2ec5a1c",
        "name": "function light",
        "func": "msg.payload = {\n    light: Number(msg.req.params.light)\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "7904117d67a1301e",
                "5401146f3ffe7c60"
            ]
        ]
    },
    {
        "id": "7904117d67a1301e",
        "type": "influxdb out",
        "z": "668472c3b2ec5a1c",
        "influxdb": "15c01c224ffc15c8",
        "name": "",
        "measurement": "testlight2",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "StevenEssam",
        "bucket": "testBD",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "f7a67f0b46805100",
        "type": "influxdb out",
        "z": "668472c3b2ec5a1c",
        "influxdb": "15c01c224ffc15c8",
        "name": "",
        "measurement": "testAccelometre2",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "StevenEssam",
        "bucket": "testBD",
        "x": 1110,
        "y": 480,
        "wires": []
    },
    {
        "id": "03d81d90e07d2a6e",
        "type": "function",
        "z": "668472c3b2ec5a1c",
        "name": "function accelerometer",
        "func": "msg.payload = {\n    xAccel: Number(msg.req.params.xAccel),\n    yAccel: Number(msg.req.params.yAccel),\n    zAccel: Number(msg.req.params.zAccel)\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 480,
        "wires": [
            [
                "f7a67f0b46805100",
                "5401146f3ffe7c60"
            ]
        ]
    },
    {
        "id": "06d5c4b3d0f3733a",
        "type": "http in",
        "z": "668472c3b2ec5a1c",
        "name": "",
        "url": "/app/accelerometer/:xAccel/:yAccel/:zAccel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 480,
        "wires": [
            [
                "03d81d90e07d2a6e"
            ]
        ]
    },
    {
        "id": "f904c9f9d86c08ea",
        "type": "http in",
        "z": "668472c3b2ec5a1c",
        "name": "",
        "url": "/app/gpsalerte/:speed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 600,
        "wires": [
            [
                "843e1fae50c5a3ab"
            ]
        ]
    },
    {
        "id": "843e1fae50c5a3ab",
        "type": "function",
        "z": "668472c3b2ec5a1c",
        "name": "function gpsalerte",
        "func": "// Extract the speed from the request parameters\nlet speed = Number(msg.req.query.speed);\n\n// Set up the payload with the speed and alert message\nmsg.payload = {\n    speed: speed, // Define the speed here\n    alert: `Speed Alert!!!: ${speed} km/h` // Use the speed variable in the alert message\n};\n\n// Return the message to the next node\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 600,
        "wires": [
            [
                "5401146f3ffe7c60"
            ]
        ]
    },
    {
        "id": "15c01c224ffc15c8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "my_influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    }
]